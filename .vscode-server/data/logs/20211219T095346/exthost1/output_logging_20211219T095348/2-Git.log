Validating found git in: git
Using git 2.27.0 from git
Opening repository for path='/home/natarovsi' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/natarovsi' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/natarovsi/.bash_history' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/natarovsi/.bash_logout' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/natarovsi/.bash_profile' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/natarovsi/.bashrc' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/natarovsi/.ssh' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/natarovsi/.vscode-server' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/natarovsi/Dockerfile' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/natarovsi/conf' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/natarovsi/data' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git rev-parse --git-dir
Open repository: /home/natarovsi/dev
> git status -z -u
Opening repository for path='/home/natarovsi/docker-compose.yml' failed; ex=Error: spawn ENOTDIR
> git symbolic-ref --short HEAD
Opening repository for path='/home/natarovsi/html' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/natarovsi/q' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/natarovsi/q.pub' failed; ex=Error: spawn ENOTDIR
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
Warning: Failed to watch ref '/home/natarovsi/dev/.git/refs/remotes/origin/master', is most likely packed.
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
Opening repository for path='/home/natarovsi' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/natarovsi' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git rev-parse --git-dir
Open repository: /home/natarovsi
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :.gitignore
> git ls-files --stage -- /home/natarovsi/.gitignore
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /home/natarovsi/.gitignore
> git show --textconv :.gitignore
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/natarovsi/.gitignore
> git show --textconv :.ssh/id_rsa.pub
> git ls-files --stage -- /home/natarovsi/.ssh/id_rsa.pub
> git cat-file -s 933a7e5dd94a04cd16a8d32d1e8c1111ae70f02e
> git show --textconv :.ssh/known_hosts
> git ls-files --stage -- /home/natarovsi/.ssh/known_hosts
> git cat-file -s 28468593254d9367058b321476eb431172e003d8
> git show --textconv :.gitignore
> git ls-files --stage -- /home/natarovsi/.gitignore
> git show --textconv :conf/default.conf
> git ls-files --stage -- /home/natarovsi/conf/default.conf
> git cat-file -s 54d9c0a6cb990e8b730ad25762e39aa43e2b5f74
> git show --textconv :.gitignore
> git ls-files --stage -- /home/natarovsi/.gitignore
> git show --textconv :reg_dump.sql
> git ls-files --stage -- /home/natarovsi/reg_dump.sql
> git cat-file -s 5280e0ad827dc0abb41c293aeb08b142ad1ee351
> git show --textconv :.gitignore
> git ls-files --stage -- /home/natarovsi/.gitignore
> git show --textconv :.ssh/known_hosts
> git ls-files --stage -- /home/natarovsi/.ssh/known_hosts
> git cat-file -s 28468593254d9367058b321476eb431172e003d8
> git check-ignore -v -z --stdin
> git show --textconv :.ssh/config
> git ls-files --stage -- /home/natarovsi/.ssh/config
> git show --textconv :.gitignore
> git ls-files --stage -- /home/natarovsi/.gitignore
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /home/natarovsi/.gitignore
> git show --textconv :.gitignore
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git ls-files --stage -- /home/natarovsi/.gitignore
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git show --textconv :.gitignore
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /home/natarovsi/.gitignore
> git show --textconv :.gitignore
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
